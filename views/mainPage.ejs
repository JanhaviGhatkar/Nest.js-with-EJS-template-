<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><% if (Message) {%> <%= Message %> <%}%></title>
    <link
      rel="icon"
      href="https://th.bing.com/th/id/OIP.TEFGCq9meFGAI-HttxxCEQAAAA?rs=1&pid=ImgDetMain"
      type="image/x-icon"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #313131;
        margin: 0;
        padding: 0;
      }
      .search-container {
        text-align: right;
        display: flex;
        justify-content: flex-end;
        align-items: center;
      }

      .search-container input[type='text'] {
        padding: 8px;
        border-radius: 3px;
        border: 1px solid #ccc;
        margin-right: 5px;
        flex: 1; /* Grow to fill available space */
      }

      .search-container button {
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
        padding: 8px 12px;
        border-radius: 3px;
      }

      .search-container button:hover {
        color: #000000;
        background-color: #5aa4f4;
      }
      .container1 {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }
      table {
        width: 100%;
        border-collapse: collapse;
      }
      th,
      td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: left;
      }
      th {
        font-weight: bold;
        background-color: #f2f2f2;
      }
      tr:hover {
        background-color: #f2f2f2;
      }
      .action-buttons {
        display: flex;
        justify-content: center;
      }
      .update-button,
      .delete-button {
        margin: 5px;
        padding: 5px 10px;
        border: none;
        border-radius: 3px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
      .update-button:hover,
      .delete-button:hover {
        background-color: #007bff;
        color: #fff;
      }
      .logout-button,
      .back-button {
        margin-right: 10px;
        padding: 5px 10px;
        border: none;
        border-radius: 3px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
      .logout-button:hover,
      .back-button:hover {
        background-color: #007bff;
        color: #fff;
      }
    </style>
  </head>
  <body>
    <div class="container1">
      <div style="text-align: right">
        <button class="logout-button" onclick="logOut()">Log Out</button>
        <button class="back-button" onclick="goBack()">Back</button>
      </div>
      <h1>User Data</h1>
      <div class="container">
        <div class="search-container">
          <input type="text" id="searchInput" placeholder="Search..." />
          <button id="searchButton" onclick="search()">Search</button>
        </div>
      </div>
      <br />
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="allDataOfUser">
          <b>Registered Users </b>
        </tbody>
      </table>
    </div>

    <script>
      function tableCreate(data) {
        console.log(data);
        tbody.innerHTML = ""
        data.forEach((element) => {
          console.log(element);
          const tr = document.createElement('tr');

          const tdId = document.createElement('td');
          tdId.innerHTML = element.id;
          tr.appendChild(tdId);

          const tdName = document.createElement('td');
          tdName.innerHTML = element.name;
          tr.appendChild(tdName);

          const tdEmail = document.createElement('td');
          tdEmail.innerHTML = element.email;
          tr.appendChild(tdEmail);

          const action = document.createElement('td');
          const updateBtn = document.createElement('button');
          updateBtn.classList = 'update-button';
          updateBtn.innerHTML = 'Update';
          updateBtn.onclick = function () {
            fillUser(element);
          };

          const deleteBtn = document.createElement('button');
          deleteBtn.classList = 'delete-button';
          deleteBtn.innerHTML = 'Delete';
          deleteBtn.onclick = function () {
            deleteUser(element.id);
          };
          action.appendChild(updateBtn);
          action.appendChild(deleteBtn);
          tr.appendChild(action);
          tbody.appendChild(tr);
        });
      }

      const tbody = document.getElementById('allDataOfUser');
      tbody.innerHTML = '';
      fetch('http://localhost:3000/user/allUsers', {
        method: 'get',
      })
        .then((response) => response.json())
        .then((data) => {
          tableCreate(data.allData);
        });

      function fillUser(userData) {
        location.href = `http://localhost:3000/user-ui/userUpdation?id=${userData.id}&name=${userData.name}&email=${userData.email}`;
      }

      function deleteUser(id) {
        Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!',
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`http://localhost:3000/user/deleteUser/${id}`, {
              method: 'DELETE',
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error('Failed to delete user');
                }
                Swal.fire({
                  title: 'Deleted!',
                  text: 'User has been deleted.',
                  icon: 'success',
                  showConfirmButton: false,
                  timer: 1000,
                }).then(() => location.reload());
              })
              .catch((error) => {
                console.log(error.message);
                Swal.fire('SweetAlert2 is working!');
                // alert('Failed to delete user');
              });
          }
        });
      }

      function logOut() {
        Swal.fire({
          title: 'Are you sure you want to \nsign out?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Sign Out!',
        }).then((result) => {
          if (result.isConfirmed) {
            Swal.fire({
              title: 'You have been successfully \nsigned out.',
              icon: 'success',
            }).then(() =>
              location.replace(`http://localhost:3000/user-ui/login`),
            );
          }
        });
      }

      function goBack() {
        location.replace(`http://localhost:3000/user-ui/login`);
      }

      function search() {
        const searchInput = document.getElementById('searchInput').value;
        // console.log(searchInput);
        fetch(`http://localhost:3000/user/getUserByParameter/${searchInput}`, {
          method: 'GET',
        })
          .then((response) => {
            if (!response.ok) {
              response.json().then((error)=>{
                console.log(error);
              })
              // Swal.fire('Something went wrong ').then(()=>location.reload())
            }
            return response.json();
          })
          .then((data) => {
            tableCreate(data.Data);
          })
          // if(searchInput === null ){
          //   location.reload()
          // }
      }
    </script>
  </body>
</html>
